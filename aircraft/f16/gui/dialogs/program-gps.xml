<?xml version="1.0"?>
<PropertyList>
	<name>programGPS</name>
  	<modal>false</modal>
  	<layout>vbox</layout>
  	<draggable>true</draggable>
    <resizable>false</resizable>
    <!--<width>250</width>
    <height>250</height>-->

    <nasal>
        <open><![CDATA[
        	var s = steerpoints.getNumber(500);
			if (s != nil) {
				setprop("f16/avionics/gps-lat", s.lat);
				setprop("f16/avionics/gps-lon", s.lon);
				setprop("f16/avionics/gps-alt", s.alt);
			}   

            #var dlg = props.globals.getNode("/sim/gui/dialogs/route-manager", 1);
            
            var load_stpts = func(path) {
                steerpoints.loadSTPTs(path.getValue());
            }
            var save_stpts = func(path) {
                steerpoints.saveSTPTs(path.getValue());
            }
            
            var defaultDirInFileSelector = getprop("/sim/fg-home") ~ "/Export";

            var file_selector = gui.FileSelector.new(
              callback: load_stpts, title: "Load data", button: "Load",
              dir: defaultDirInFileSelector, dotfiles: 1, pattern: ["*.f16dtc"]);
            var save_selector = gui.FileSelector.new(
              callback: save_stpts, title: "Save data", button: "Save",
              dir: defaultDirInFileSelector, dotfiles: 1, file: "f16-stpt-iff-and-dl.f16dtc", pattern: ["*.f16dtc"]);
        ]]></open>

        <close><![CDATA[
            file_selector.del();
            save_selector.del();
        ]]></close>
    </nasal>

    <group>
		<layout>hbox</layout>
		<empty><stretch>1</stretch></empty>

		<text><label>Program GPS target</label></text>

		<empty><stretch>1</stretch></empty>

		<button>
			<pref-width>16</pref-width>
			<pref-height>16</pref-height>
			<legend></legend>
			<default>1</default>
			<keynum>27</keynum>
			<border>2</border>
			<binding>
				<command>dialog-close</command>
			</binding>
			<binding>
				<command>dialog-apply</command>
			</binding>
		</button>
	</group>

	<hrule/>

  	<text>
	    <label>STPT #500 for standoff GPS-guided munitions (JSOW, JASSM)</label>
	    <height>25</height>
	</text>

	<input>
	  	<width>250</width>
	  	<height>25</height>
	  	<label>Latitude</label>
	  	<property>f16/avionics/gps-lat</property>
	  	<live>true</live>
	  	<halign>left</halign>
        <binding>
            <command>dialog-apply</command>
      	</binding>
      	<!--<color>
      		<red>0.5</red>
      		<green>1</green>
      		<blue>0.5</blue>
      	</color>-->
	</input>
	<input>
	  	<width>250</width>
	  	<height>25</height>
	  	<label>Longitude</label>
	  	<property>f16/avionics/gps-lon</property>
	  	<live>true</live>
	  	<halign>left</halign>
        <binding>
            <command>dialog-apply</command>
      	</binding>
      	<!--<color>
      		<red>0.5</red>
      		<green>1</green>
      		<blue>0.5</blue>
      	</color>-->
	</input>
	<input>
	  	<width>250</width>
	  	<height>25</height>
	  	<label>Altitude (ft)</label>
	  	<property>f16/avionics/gps-alt</property>
	  	<live>true</live>
	  	<halign>left</halign>
        <binding>
            <command>dialog-apply</command>
      	</binding>
      	<!--<color>
      		<red>0.5</red>
      		<green>1</green>
      		<blue>0.5</blue>
      	</color>-->
	</input>

 <group>
	<layout>hbox</layout>
	<button>
		<legend>Apply to current weapon</legend>
		<binding>
			<command>nasal</command>
			<script><![CDATA[
				var s = steerpoints.STPT.new();
				s.lat = getprop("f16/avionics/gps-lat");
				s.lon = getprop("f16/avionics/gps-lon");
				s.alt = getprop("f16/avionics/gps-alt");
				steerpoints.setNumber(500,s);
				if (s.lat < 90 and s.lat > -90 and s.lon < 180 and s.lon > -180 and pylons.fcs != nil) {
					var wp = pylons.fcs.getSelectedWeapon();
					if (wp != nil and wp.parents[0] == armament.AIM and wp.target_pnt == 1 and wp.guidance=="gps") {
						var coord = geo.Coord.new();
						coord.set_latlon(s.lat,s.lon,s.alt*FT2M);
						var spot = fc.ContactTGP.new("GPS-Spot",coord,0);
						armament.contactPoint = spot;
						tgp.gps = 1;
						if (getprop("f16/stores/tgp-mounted") and 0) {
							tgp.flir_updater.click_coord_cam = armament.contactPoint.get_Coord();
							callsign = armament.contactPoint.getUnique();
			                setprop("/aircraft/flir/target/auto-track", 1);
			                flir_updater.offsetP = 0;
			                flir_updater.offsetH = 0;
							setprop("f16/avionics/tgp-lock", 1);
						}
						wp.setContacts([spot]);
					}
				}
			]]></script>
		</binding>
	</button>
	<button>
		<legend>Clear from weapon</legend>
		<binding>
			<command>nasal</command>
			<script><![CDATA[
				if (pylons.fcs != nil) {
					var wp = pylons.fcs.getSelectedWeapon();
					if (wp != nil and wp.parents[0] == armament.AIM) {
						wp.setContacts([]);
					}
					if (armament.contactPoint != nil and armament.contactPoint.get_Callsign()=="GPS-Spot") {
						armament.contactPoint = nil;
					}
					tgp.gps = 0;
					if (!getprop("f16/stores/tgp-mounted")) {
						tgp.flir_updater.click_coord_cam = nil;
					}
				}				
			]]></script>
		</binding>
	</button>
 </group>

 <empty><stretch>1</stretch></empty>

 <hrule/>

 <input>
	  	<width>250</width>
	  	<height>25</height>
	  	<label>From STPT</label>
	  	<property>f16/avionics/stpt-from</property>
	  	<live>true</live>
	  	<halign>left</halign>
        <binding>
            <command>dialog-apply</command>
      	</binding>
	</input>
	<input>
	  	<width>250</width>
	  	<height>25</height>
	  	<label>to STPT</label>
	  	<property>f16/avionics/stpt-to</property>
	  	<live>true</live>
	  	<halign>left</halign>
        <binding>
            <command>dialog-apply</command>
      	</binding>
	</input>
	<button>
		<legend>Copy STPT</legend>
		<binding>
			<command>nasal</command>
			<script><![CDATA[
				steerpoints.copy(getprop("f16/avionics/stpt-from"),getprop("f16/avionics/stpt-to"));
			]]></script>
		</binding>
	</button>

	<text>
	    <label>#000 to #099 is route (read-only).</label>
	    <height>25</height>
	</text>
	<text>
	    <label>#100 to #199 is HSD lines 1 (read-only). #200 to #299 is HSD lines 2 (read-only).</label>
	    <height>25</height>
	</text>
	<text>
	    <label>#300 to 305 is threat circles. #350 to #359 is for pilot mnemonics.</label>
	    <height>25</height>
	</text>
	<text>
	    <label>#400 to #404 is own OFLY/TGP marks. #450 to 454 is DLNK marks.</label>
	    <height>25</height>
	</text>
	<text>
	    <label>#500 is WPN program GPS coords. #555 is bulls-eye.</label>
	    <height>25</height>
	</text>

	<hrule/>

	<button>
        <legend>Load DTC</legend>
        <equal>true</equal>
        <binding>
            <command>nasal</command>
            <script>file_selector.open()</script>
        </binding>
    </button>
    <button>
        <legend>Save DTC</legend>
        <equal>true</equal>
        <enable>
        	<value>1</value>
        </enable>
        <binding>
            <command>nasal</command>
            <script>save_selector.open();</script>
        </binding>
    </button>

</PropertyList>